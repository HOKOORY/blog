<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ho.blogt.mapper.ArticleMapper">
    <select id="getArticleList" resultMap="listArticle">
        select article.id,
               article.user_id,
               article.title,
               article.is_show,
               article.like_sum,
               article.read_sum,
               article.create_time,
               article_tag.tag_id,
               article_tag.id as article_tag_id,
               tag.id         as tag_id,
               tag.name       as tag_name
        from article
                     LEFT JOIN article_tag ON article.id = article_tag.article_id
                     LEFT JOIN tag ON article_tag.tag_id = tag.id
                where article.is_show = 1
        <if test="startTime != null and endTime != null">
            AND article.create_time &gt;= #{startTime}
            AND article.create_time &lt;= #{endTime}
        </if>
        <if test="tagId != 0">
            AND article_tag.tag_id = #{tagId}
        </if>
        ORDER BY article.create_time
    </select>

    <resultMap id="listArticle" type="com.ho.blogt.entity.Article">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="is_show" property="isShow"/>
        <result column="like_sum" property="likeSum"/>
        <result column="read_sum" property="readSum"/>
        <result column="create_time" property="createTime"/>
        <collection property="tags" ofType="com.ho.blogt.entity.ArticleTag">
            <id column="article_tag_id" property="id"/>
            <result column="id" property="articleId"/>
            <result column="tag_id" property="tagId"/>
            <collection property="tag" ofType="com.ho.blogt.entity.Tag">
                <id column="tag_id" property="id"/>
                <result column="tag_name" property="name"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getArticleDetail" resultMap="articleDetail">
        select article.id,
               article.user_id,
               article.title,
               article.is_show,
               article.like_sum,
               article.read_sum,
               article.create_time,
               article_tag.tag_id,
               article_tag.id as article_tag_id,
               tag.id         as tag_id,
               tag.name       as tag_name,
               article_context.context
        from article
                     LEFT JOIN article_tag ON article.id = article_tag.article_id
                     LEFT JOIN tag ON article_tag.tag_id = tag.id
                     LEFT JOIN article_context ON article.id = article_context.article_id
        where article.is_show = 1
          AND article.id = #{articleId}
    </select>
    <resultMap id="articleDetail" type="com.ho.blogt.entity.Article">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="is_show" property="isShow"/>
        <result column="like_sum" property="likeSum"/>
        <result column="read_sum" property="readSum"/>
        <result column="create_time" property="createTime"/>
        <collection property="tags" ofType="com.ho.blogt.entity.ArticleTag">
            <id column="article_tag_id" property="id"/>
            <result column="id" property="articleId"/>
            <result column="tag_id" property="tagId"/>
            <collection property="tag" ofType="com.ho.blogt.entity.Tag">
                <id column="tag_id" property="id"/>
                <result column="tag_name" property="name"/>
            </collection>
        </collection>
        <collection property="context" ofType="com.ho.blogt.entity.ArticleContext">
            <result column="context" property="context"/>
        </collection>
    </resultMap>

    <update id="addLike">
        update article
        set article.like_sum = article.like_sum + 1
        where article.id = #{articleId}
    </update>

    <update id="addRead">
        update article
        set article.read_sum = article.read_sum + 1
        where article.id = #{articleId}
    </update>

    <insert id="insertArticle" useGeneratedKeys="true" parameterType="com.ho.blogt.entity.Article"
            keyProperty="article.id">
        insert into article(user_id, title, is_show,can_comment, create_time, update_time)
        values (#{article.userId}, #{article.title}, #{article.isShow},#{article.canComment}, #{article.createTime}, #{article.updateTime})
    </insert>
</mapper>
